//
// Test Bench Module cat_recognizer_lib.cat_recognizer_tester.cat_recognizer_tester
//
// Created:
//          by - amitb.UNKNOWN (DESKTOP-GIFQ7HQ)
//          at - 10:14:43 29/11/2018
//
// Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
//
`resetall
`timescale 1ns/10ps
module cat_recognizer_tester (PADDR,
                              PENABLE,
                              PSEL,
                              PWDATA,
                              PWRITE,
                              clk,
                              rst,
                              PRDATA,
                              CatRecOut
                             );

// Local declarations

parameter Amba_Word = 24;
parameter Amba_Addr_Depth = 12;
parameter Weightrecision = 5;
parameter file_length = 4096;


output PADDR;
output PENABLE;
output PSEL;
output PWDATA;
output PWRITE;
output clk;
output rst;
input  PRDATA;
input  CatRecOut;

reg [Amba_Addr_Depth - 1:0] PADDR;
reg                         PENABLE;
reg                         PSEL;
reg [Amba_Word - 1:0]       PWDATA;
reg                         PWRITE;
reg                         clk;
reg                         rst;
wire [Amba_Word - 1:0]       PRDATA;
wire                         CatRecOut;

initial begin
    clk <= 1'b0;
    rst <= 1'b1;
    #10 rst <= 0'b0;
end

initial begin forever
    #5 clk = ~clk;
end

////////////////////////////////////main test////////////////////////////////////
integer index,fd, r;
reg[15:0] pixel1,pixel2,pixel3;
reg[Amba_Addr_Depth-1:0] inc_addr,write_address;

initial begin
write_address[Amba_Addr_Depth-1:1] = {Amba_Addr_Depth{1'b0}}; //reset read address
write_address[0] = 1'b1;
inc_addr = {Amba_Addr_Depth{1'b0}};
inc_addr[0] = 1'b1;
fd = $fopen("../TestBenchInputFiles/Image0.txt" , "r");
for(index = 1; index<=file_length;index = index + 1)
	begin
		    r = $fscanf(fd, "%d\n", pixel1); 
		    r = $fscanf(fd, "%d\n", pixel2); 
		    r = $fscanf(fd, "%d\n", pixel3); 
			write(write_address, {pixel1[7:0], pixel2[7:0], pixel3[7:0]})
			write_address = write_address + inc_addr;
	end
end
////////////////////////////////////main test////////////////////////////////////




task write;
	input [Amba_Addr_Depth-1:0]	Adress;
	input [3*Amba_Word-1:0]		data;
	begin
		@(posedge clk)
		begin
		#1;
		PSEL = 1'b1;
		PENABLE = 1'b0;
		PWRITE = 1'b1;
		PADDR = Adress;
		PWDATA = data;
		end
		@(posedge clk)
		begin
		#1;
		PENABLE = 1'b1;
		end
	end
endtask



endmodule // cat_recognizer_tester


